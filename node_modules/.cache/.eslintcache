[{"/Users/vitaliy/Documents/GitHub/DonNTU_bpid_vigenere-feistel-2022/src/index.js":"1","/Users/vitaliy/Documents/GitHub/DonNTU_bpid_vigenere-feistel-2022/src/App.js":"2"},{"size":219,"mtime":1642003491434,"results":"3","hashOfConfig":"4"},{"size":3752,"mtime":1642003491434,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ngj57k",{"filePath":"8","messages":"9","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"/Users/vitaliy/Documents/GitHub/DonNTU_bpid_vigenere-feistel-2022/src/index.js",[],"/Users/vitaliy/Documents/GitHub/DonNTU_bpid_vigenere-feistel-2022/src/App.js",["11","12","13"],"import React, {useState, useEffect} from \"react\"\nimport \"./App.css\";\nlet CryptoJS = require(\"crypto-js\"\n)\nfunction App() {\n  const alphabetVisionare = 'abcdefghijklmnopqrstuvwxyz'\n  let visionare = new Map()\n\n  const [textOrigin, setTextOrigin] = useState('')\n  const [textVisionare, setTextVisionare] = useState('')\n  const [textFeistel, setTextFeistel] = useState('')\n  const [textDFeistel, setTextDFeistel] = useState('')\n  const [key, setKey] = useState('A')\n\n\n  useEffect(() => {\n    if(key !== '' && key.match(/[A-Z]/i))\n      shifrVisionare(textOrigin)\n  }, [key])\n  useEffect(() => {\n    if(textVisionare !== '')\n      shifrFeistel(textVisionare)\n  }, [textVisionare])\n  function keyChanged(e) {\n    if(e.target.value.length <= 1)\n      setKey(e.target.value.toUpperCase())\n  }\n  useEffect(() => {\n    if(textFeistel !== '')\n      decryptFeistel(textFeistel)\n  }, [textFeistel])\n\n  function fileLoad(e) {\n      let file = e.target.files[0]\n      if(file === undefined)\n        return\n      let reader = new FileReader()\n      reader.readAsText(file)\n\n      reader.onload = () => {\n        setTextOrigin(reader.result)\n        if(key !== '')\n          shifrVisionare(reader.result)\n      }\n  }\n  function alphabetGenerate() {\n    for(let x of alphabetVisionare) {\n      let y = new Map()\n      let count = alphabetVisionare.indexOf(x)\n      for(let i = 0; i < alphabetVisionare.length; i++) {\n        if(count === alphabetVisionare.length)\n          count = 0\n        y.set(alphabetVisionare[i].toUpperCase(), alphabetVisionare[count].toUpperCase())\n        count++\n      }\n      visionare.set(x.toUpperCase(), y)\n    }\n  }\n  function shifrVisionare(text) {\n    alphabetGenerate() \n    text = text.split('').map(e => {\n      if(e.match(/[A-Z]/i))\n        if(e === e.toUpperCase())\n          return visionare.get(e.toUpperCase()).get(key)\n        else\n          return visionare.get(e.toUpperCase()).get(key).toLowerCase()\n      else return e\n    }).join('')\n    setTextVisionare(text)\n  }\n  function shifrFeistel(text) {\n    let keyHex = CryptoJS.enc.Utf8.parse(key.repeat(3))\n    let encrypted = CryptoJS.DES.encrypt(text, keyHex, {\n      mode: CryptoJS.mode.ECB,\n      padding: CryptoJS.pad.Pkcs7\n    })\n    setTextFeistel(encrypted.toString())\n  }\n  function decryptFeistel(text) {\n    let keyHex = CryptoJS.enc.Utf8.parse(key.repeat(3))\n    let decrypted = CryptoJS.DES.decrypt({\n      ciphertext: CryptoJS.enc.Base64.parse(text)\n    }, keyHex, {\n      mode: CryptoJS.mode.ECB,\n      padding: CryptoJS.pad.Pkcs7\n    })\n    setTextDFeistel(decrypted.toString(CryptoJS.enc.Utf8))\n  }\n\n  return (\n    \n    <section>\n      <h1>ПИ-18а 13 Вариант (Виженер + Фейстель)</h1>\n      <h2>Шифрование Вижинера</h2>\n      <form>\n        <label htmlFor=\"file\">Choose file to upload</label>\n        <input id=\"file\" name=\"fasf\" type=\"file\" accept=\".txt\" onChange={fileLoad}></input>\n        <br/>\n        <label htmlFor=\"text\">Key</label>\n        <input id=\"text\"type=\"text\" value={key} onChange={keyChanged}></input>\n      </form>\n      <label htmlFor=\"origin\"> Original Text:  </label>\n      <textarea id=\"origin\" value={textOrigin} readOnly className=\"text\"></textarea>\n      <label htmlFor=\"visionare\"> Visionare:  </label>\n      <textarea id=\"visionare\" value={textVisionare} readOnly className=\"text\"></textarea>\n      <hr/>\n      <h2>Шифрование Фейстеля</h2>\n      <label htmlFor=\"feistel\">  FeisteL: </label>\n      <textarea id=\"feistel\" value={textFeistel} readOnly className=\"text\"></textarea>\n      <label htmlFor=\"dfeistel\">  Decrypt FeisteL: </label>\n      <textarea id=\"dfeistel\" value={textDFeistel} readOnly className=\"text\"></textarea>\n    </section>\n  );\n}\n\nexport default App;\n",{"ruleId":"14","severity":1,"message":"15","line":19,"column":6,"nodeType":"16","endLine":19,"endColumn":11,"suggestions":"17"},{"ruleId":"14","severity":1,"message":"18","line":23,"column":6,"nodeType":"16","endLine":23,"endColumn":21,"suggestions":"19"},{"ruleId":"14","severity":1,"message":"20","line":31,"column":6,"nodeType":"16","endLine":31,"endColumn":19,"suggestions":"21"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'shifrVisionare' and 'textOrigin'. Either include them or remove the dependency array.","ArrayExpression",["22"],"React Hook useEffect has a missing dependency: 'shifrFeistel'. Either include it or remove the dependency array.",["23"],"React Hook useEffect has a missing dependency: 'decryptFeistel'. Either include it or remove the dependency array.",["24"],{"desc":"25","fix":"26"},{"desc":"27","fix":"28"},{"desc":"29","fix":"30"},"Update the dependencies array to be: [key, shifrVisionare, textOrigin]",{"range":"31","text":"32"},"Update the dependencies array to be: [shifrFeistel, textVisionare]",{"range":"33","text":"34"},"Update the dependencies array to be: [decryptFeistel, textFeistel]",{"range":"35","text":"36"},[565,570],"[key, shifrVisionare, textOrigin]",[660,675],"[shifrFeistel, textVisionare]",[872,885],"[decryptFeistel, textFeistel]"]